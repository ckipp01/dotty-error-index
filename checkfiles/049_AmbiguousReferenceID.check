-- [E049] Reference Error: examples/049_AmbiguousReferenceID.scala:4:2 
4 |  foo
  |  ^^^
  |  Reference to foo is ambiguous.
  |  It is both defined in package <empty>
  |  and imported subsequently by import foo._
  |-----------------------------------------------------------------------------
  | Explanation (enabled by `-explain`)
  |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  | The identifier foo is ambiguous because a name binding of lower precedence
  | in an inner scope cannot shadow a binding with higher precedence in
  | an outer scope.
  |
  | The precedence of the different kinds of name bindings, from highest to lowest, is:
  |  - Definitions in an enclosing scope
  |  - Inherited definitions and top-level definitions in packages
  |  - Names introduced by import of a specific name
  |  - Names introduced by wildcard import
  |  - Definitions from packages in other files
  | Note:
  |  - As a rule, definitions take precedence over imports.
  |  - Definitions in an enclosing scope take precedence over inherited definitions,
  |    which can result in ambiguities in nested classes.
  |  - When importing, you can avoid naming conflicts by renaming:
  |    import scala.{foo => fooTick}
   -----------------------------------------------------------------------------
1 error found
Errors encountered during compilation
